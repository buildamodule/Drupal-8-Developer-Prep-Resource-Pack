<?php
 
require_once __DIR__ . '/vendor/autoload.php';
 
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

$request = Request::createFromGlobals();

// You can also simulate a request:
// $request = Request::create('/index.php?name=Fabien');


// Examples of what we can do with $request:

// The URI being requested (e.g. /about) minus any query parameters
//print $request->getPathInfo();
 
// Retrieve GET and POST variables respectively
//print $request->query->get('name');
//print $request->query->get('name', 'Universe');
 
// Retrieve SERVER variables
//print $request->server->get('HTTP_HOST');
 
// Retrieves an instance of UploadedFile identified by foo
//print $request->files->get('foo');
 
// Retrieve a COOKIE value
//print $request->cookies->get('PHPSESSID');
 
// Retrieve an HTTP request header, with normalized, lowercase keys
//print $request->headers->get('host');
//print $request->headers->get('content_type');
 
//print $request->getMethod(); // GET, POST, PUT, DELETE, HEAD
//var_dump($request->getLanguages()); // An array of languages the client accepts


/*
// Example with getting a client IP address to as a security check:

// Doesn't work with a reverse proxy.
if ($myIp == $_SERVER['REMOTE_ADDR']) { }

// Works with reverse proxy.
if ($myIp == $_SERVER['HTTP_X_FORWARDED_FOR'] || $myIp == $_SERVER['REMOTE_ADDR']) { }

// Works with chained proxies
$request = Request::createFromGlobals();
if ($myIp == $request->getClientIp()) { }
*/

 
$input = $request->get('name', 'World');
$response = new Response(sprintf('Hello %s', htmlspecialchars($input, ENT_QUOTES, 'UTF-8')));


// Examples what what we can do with $response:
//$response = new Response();
 
//$response->setContent('Hello again, world, it is ' . time() . '!');
//$response->setStatusCode(404);
//$response->headers->set('Content-Type', 'text/plain');
 
// configure the HTTP cache headers
//$response->setMaxAge(10);
 
$response->send(); 